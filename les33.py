#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
#Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
arg1 = float(input("Введите аргумент 1:"))
arg2 = float(input("Введите аргумент 2:"))
def my_divide (arg1, arg2):
    try:
        return arg1 / arg2
    except arg2 == 0:
        return
print(arg1 / arg2)

#2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя:
#имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
#Осуществить вывод данных о пользователе одной строкой.
name = str(input("name"))
surname = str(input("surname"))
date_of_birth = str(input("date_of_birth"))
city = str(input("city"))
email = str(input("email"))
phone_number = str(input("phone_number"))

def bios_data (name, surname, date_of_birth, city, email, phone_number):
    return bios_data.join([name, surname, date_of_birth, city, email, phone_number])
print(name, surname, date_of_birth, city, email, phone_number)

#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
def my_func (arg1, arg2, arg3):
    if arg1 >= arg3 and arg2 >= arg3:
        return arg1 + arg2
    elif arg1 > arg2 and arg1 < arg3:
        return arg1 + arg3
    else:
        return arg2 + arg3


#4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y.
#Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
#Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x, y):
    return x ** y
print (my_func)





#5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел.
#Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
#Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введён после нескольких чисел,
#то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def my_sum (*args):
    sum_res = 0
    try:
        res = 0
        for el in range(len(number)):
            res = res + int(number[el])
            sum_res = sum_res + res
            print(f'Current sum is {sum_res}')
    except number[el] == '*':
        return


while 1:
    i = input(">>>")#Запрос ввода
    i = i.split(" ")#Делим по пробелам
    a = 0
    while a < len(i):
        try:
            i[a] = int(i[a])#строки в числа
        except ValueError:
            print("Value Error")#при ошибке пишем ошибку и останавливаем цикл
            break
        a = a + 1
    z = 0#Переменная с результатом
    for c in i:
        z = z + c#Считаем все
    print(z)#Выводим результат




#6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой.
#Например, print(int_func(‘text’)) -> Text.
i = str(input("Введите текст с маленькой буквы: "))
def int_func(*args):
    return i.title()
    print(i)
#7. Продолжить работу над заданием. В программуc должна попадать строка из слов, разделённых пробелом.
#Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки,
#но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().
i = str(input ("Введите текст с маленькой буквы: "))
def int_func(*args):
    return i.capitalize()
    print(i)